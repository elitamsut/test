name: CI Pipeline

on:
  push:
    branches:
      - main
      - test
  pull_request:
    branches:
      - main
      - test

env:
  IMAGE_CONFIG: 'image-config.yaml'
  DOCKER_IMAGE: 'elitamsut/myapp'  # Define your Docker image name here

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GITHUB_SSH_KEY }}
          ref: 'test'

      # Set up Docker Buildx
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build Docker Image
      - name: Build Docker Image
        run: |
          TAG=$(yq eval '.image.tag' $IMAGE_CONFIG)
          docker build --pull -t ${{ env.DOCKER_IMAGE }}:${TAG} .
        
      # Run Tests
      - name: Run Tests
        run: |
          TAG=$(yq eval '.image.tag' $IMAGE_CONFIG)
          docker run --rm ${{ env.DOCKER_IMAGE }}:${TAG} python -m unittest discover -s tests

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push Docker Image
      - name: Push Docker Image
        run: |
          TAG=$(yq eval '.image.tag' $IMAGE_CONFIG)
          docker push ${{ env.DOCKER_IMAGE }}:${TAG}

      # Update Helm values with new image tag
      - name: Update Helm values
        run: |
          TAG=$(yq eval '.image.tag' $IMAGE_CONFIG)
          sed -i "s/tag: .*/tag: '${TAG}'/" path/to/your/values.yaml

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install myapp path/to/your/chart --values path/to/your/values.yaml

      # Notify Success
      - name: Notify Success
        run: echo "CI Pipeline completed successfully!"

